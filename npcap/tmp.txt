typedef struct tcp_header
{
	unsigned short src_port;    //源端口号   
	unsigned short dst_port;    //目的端口号   
	unsigned int seq_no;        //序列号   
	unsigned int ack_no;        //确认号   
#if LITTLE_ENDIAN   
	unsigned char reserved_1 : 4; //保留6位中的4位首部长度   
	unsigned char thl : 4;        //tcp头部长度   
	unsigned char flag : 6;       //6位标志   
	unsigned char reseverd_2 : 2; //保留6位中的2位   
#else  
	unsigned char  thl : 4;        //tcp头部长度   
	unsigned char reserved_1 : 4; //保留6位中的4位首部长度   
	unsigned char reseverd_2 : 2; //保留6位中的2位   
	unsigned char flag : 6;       //6位标志    
#endif   
	unsigned short wnd_size;    //16位窗口大小   
	unsigned short chk_sum;     //16位TCP检验和   
	unsigned short urgt_p;      //16为紧急指针   

}tcp_header;

    cout << "src_port: " << src_port << endl;
    cout << "dst_port: " << dst_port << endl;
    cout << "seq_no: " << seq_no << endl;
    cout << "ack_no: " << ack_no << endl;
    printf("thl: 0x%x\n", thl);
    printf("reserved_1: 0x%x\n", reseverd_1);
    printf("reserved_2: 0x%x\n", reseverd_2);
    printf("flag: 0x%x\n", flag);
    cout << "ack: " << ack << endl;
    cout << "fin: " << fin << endl;
    cout << "wnd_size: " << wnd_size << endl;
    cout << "chk_sum: " << chk_sum << endl;